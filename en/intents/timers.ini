# Timers, reminders and alarms

## Timers

[StartNamedTimer]
timer_name = (laundry){name}
(start | activate) [the] <timer_name> [timer]

[StartVariableTimer]
(start | set) (a | the) [timer for] (1..3){hour} (hours | hour) [timer]
(start | set) (a | the) [timer for] (1..3){hour} (hours | hour) [and] (1..59){minute} (minutes | minute) [timer]
(start | set) (a | the) [timer for] (1..120){minute} (minutes | minute) [timer]
(start | set) (a | the) [timer for] (1..59){minute} (minutes | minute) [and] (1..59){second} (seconds | second) [timer]
(start | set) (a | the) [timer for] (1..120){second} (seconds | second) [timer]

# TODO use the "variable" timer that accepts a name, like laundry, 
# so that you can set the laundry timer to any time eg 65 minutes

[GetTimer]
how (long | much | much) [time] [is] [there | left | remains] (until | on) [the] (<StartNamedTimer.timer_name> [timer] | timer:variable{name}) [is done | ends]
(do you have | is) a timer running

[EndTimer]
(stop | end | cancel) [the] (<StartNamedTimer.timer_name> [timer] | timer:variable{name})

# TODO "add n minutes to me [named] timer"

# TODO "set an alarm for hh mm tomorrow"

## Reminders

[LaundryReminder]
when = [(today | tomorrow | [on] $days){day}]
remind me about the (washing | laundry) <when> at (1..12){hour} (AM | PM){ampm} <when>

[LunchReminder]
when = [tomorrow] [in the] [morning]
<when> remind me about my lunch <when>